function varargout = Initialize_RZ5(rcx_file)

%
%Initialize_RZ5.m - Rennaker Neural Engineering Lab, 2010
%
%   Initialize_RZ5 uses the ActiveX controls to form a connection with the
%   Tucker-Davis Technologies (TDT) RZ5 processor.
%   
%   rz5 = Initialize_RZ5(rcx_file,connection_type) loads the RCX file
%   specified by "rcx_file" to the RZ5 through it's gigabit interface. The
%   function will also work without a 
%
%   [rz5, checker] = Initialize_RZ5(rcx_file) returns the optional output 
%   "checker", which is a boolean matrix whose first, second, and third 
%   element indicate whether the RZ5 connection was successful, the RCX 
%   file successfully loaded, and the RCX file is successfully running, 
%   respectively.
%
%   [rz5, checker, samprate] = Initialize_RZ5(rcx_file) returns the second 
%   optional output "samprate" which returns the exact sampling rate of the
%   RZ5 processor with the current RCX file.
%
%   [rz5, checker, samprate, cycusage] = Initialize_RZ5(rcx_file) returns 
%   the third optional output "cycusage" which returns the percent usage of
%   the RZ5 main processor.
%
%   Last updated July 8, 2010, by Drew Sloan.

if ~exist(rcx_file,'file')      %First, make sure the RCX file exists.
    error('RZ5 INITIALIZATION ERROR! RCX file does not exist!');
end
checker = zeros(1,3);	%Keep track of whether the connect, load, and run commands are successful.
rz5 = actxcontrol('RPco.x', [5 5 26 26]);	%Set up the ActiveX control for the RZ5.
checker(1) = rz5.ConnectRZ5('GB',1);       	%Connect to the RX5 through the gigabit interface.
checker(2) = rz5.LoadCOF(rcx_file);     	%Load the RCX circuit to the RZ5.
checker(3) = rz5.Run;                     	%Set the RCX file to run.
varargout{1} = rz5;                         %The first output argument is the RZ5 ActiveX handle.
varargout{2} = checker;                         %The second output argument is checker matrix.
varargout{3} = rz5;                         %The first output argument is the RZ5 ActiveX handle.
varargout{4} = rz5;                         %The first output argument is the RZ5 ActiveX handle.
rxn_sampling_rate = rxn.GetSFreq;               %Grab the sampling rate from the RZ5.
